# apiVersion: v1
# kind: Service
# metadata:
#   name: user-db-service
# spec:
#   selector:
#     app: user-db
#   ports:
#     - protocol: TCP
#       port: 5432
#       targetPort: 5432
# ---
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: user-db-set
# spec:
#   selector:
#     matchLabels:
#       app: user-db 
#   serviceName: "user-db-service"
#   replicas: 1
#   minReadySeconds: 10
#   template:
#     metadata:
#       labels:
#         app: user-db 
#     spec:
#       terminationGracePeriodSeconds: 10
#       # initContainers:
#       #   - name: db-init    # using root, change permissions to not use root in main container
#       #     image: postgres
#       #     command: 
#       #       - 'sh'
#       #       - '-c'
#       #       - |
#       #         chown -R 999:999 /var/lib/postgresql/data
#       #     volumeMounts:
#       #       - name:  user-db
#       #         mountPath: /var/lib/postgresql/data
#       containers:
#         - name: user-db
#           image: postgres
#           # postgresql:
#           #   parameters:
#           #     "log_destination": "stderr"
#           #     "logging_collector": "off"
#           # command: 
#           # - 'sh'
#           # - '-c'
#           # - 'while sleep 3600; do :; done'

#           # -  "-c"
#           # - "log_statement=all"

#           #   - 'sh'
#           #   - '-c'
#           #   - |
#           #     chown -R 999:999 /var/lib/postgresql/data
#           ports: 
#           - containerPort: 5432
#           env:
#           - name: POSTGRES_USERNAME
#             valueFrom:
#               secretKeyRef:
#                 name: global-secret
#                 key: user-db-user
#           - name: POSTGRES_PASSWORD
#             valueFrom:
#               secretKeyRef:
#                 name: global-secret
#                 key: user-db-pass
#           - name: POSTGRES_DB
#             valueFrom:
#               configMapKeyRef:
#                 name: global-config
#                 key: user-db-database
#           securityContext:
#             # allowPrivilegeEscalation: false
#             # runAsRoot: true
#             # runAsUser: 999
#             # runAsGroup: 999    
#         # This is WORKING        
#           volumeMounts:
#              - mountPath: "/var/lib/postgresql/data"
#                name: storage
#             #  - mountPath: "/etc/postgresql"
#             #    name: postgres-config-volume
#       volumes:
#          - name: storage
#            persistentVolumeClaim:
#             claimName: user-db-pvc
#         #  - name: postgres-config-volume
#         #    configMap:
#         #      name: postgres-config
#         #      items:
#         #      - key: postgresql.conf
#         #        path: postgresql.conf