# prometheus:
#   url: http://prometheus-operated.prometheus.svc
#   rules:
#     default: true

#   # # this rule matches cumulative cAdvisor metrics measured in seconds
#   # - seriesQuery: '{__name__=~"^container_.*",container!="POD",namespace!="",pod!=""}'
#   #   resources:
#   #     # skip specifying generic resource<->label mappings, and just
#   #     # attach only pod and namespace resources by mapping label names to group-resources
#   #     overrides:
#   #       namespace: {resource: "namespace"}
#   #       pod: {resource: "pod"}
#   #   # specify that the `container_` and `_seconds_total` suffixes should be removed.
#   #   # this also introduces an implicit filter on metric family names
#   #   name:
#   #     # we use the value of the capture group implicitly as the API name
#   #     # we could also explicitly write `as: "$1"`
#   #     matches: "^container_(.*)_seconds_total$"
#   #   # specify how to construct a query to fetch samples for a given series
#   #   # This is a Go template where the `.Series` and `.LabelMatchers` string values
#   #   # are available, and the delimiters are `<<` and `>>` to avoid conflicts with
#   #   # the prometheus query language
#   #   metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>,container!="POD"}[2m])) by (<<.GroupBy>>)'

# # prometheus:
# #   url: http://prometheus-operated.prometheus-adapter.svc
# #   port: 9090
# # # rules:
# # #   custom:
# # #   - seriesQuery: 'container_cpu_usage_seconds_total'
# #     # metricsQuery: 'container_cpu_usage_seconds_total and {pod="user-service-deployment-6fd446b58b-l88dj"}'
# #     # resources:
# #     #   overrides:
# #     #     kubernetes_namespace: {resource: "namespace"}
# #     #     kubernetes_pod_name: {resource: "pod"}
# #     # name:
# #     #   matches: "^(.*)_total"
# #     #   as: "${1}_per_second"
# #     # metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)'

# # rules:
# #   custom:
# #     - seriesQuery: 'golang_sample_app_requests_count'
# #       resources:
# #         template: <<.Resource>>
# #       name:
# #         matches: "golang_sample_app_requests_count"
# #         as: "golang_sample_app_requests_per_second"
# #       metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)'