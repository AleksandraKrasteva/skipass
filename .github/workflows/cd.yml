name: CD Pipeline

on:
 push:
    branches:
      - dev
  # workflow_run:
  #   workflows: ["CI Pipeline"]
  #   types:
  #     - completed

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check if repository is checked out
      id: check-repo
      run: |
         $repoPath = "${{ secrets.REPO_PATH }}"
         if (Test-Path $repoPath) {
           $repoContents = Get-ChildItem -Path $repoPath
           if ($repoContents.Count -gt 0) {
             echo "repo-exists=true" >> $env:GITHUB_ENV
           } else {
             echo "repo-exists=false" >> $env:GITHUB_ENV
           }
         } else {
           echo "repo-exists=false" >> $env:GITHUB_ENV
         }

        
    - name: Checkout repository if not present
      if: env.repo-exists == 'false'
      run: |
        git clone https://github.com/AleksandraKrasteva/skipass.git ${{ secrets.REPO_PATH }}

    - name: Switch to dev branch and pull latest change
      run: |
        cd ${{ secrets.REPO_PATH }}
        git checkout dev
        git pull origin dev

    - name: Check Deployment Status
      id: check-deployment
      run: |
        kubectl get deployment post-service -o jsonpath='{.status.readyReplicas}' || echo "0"
      continue-on-error: true

    - name: Deploy Application if Not Running
      if: steps.check-deployment.outputs.status == '0'
      run: |
        kubectl create secret generic global-secret --from-literal=post-db-user=${{ secrets.POST_DB_USER }} --from-literal=post-db-pass=${{ secrets.POST_DB_PASS }} --from-literal=rabbitmq-user=${{ secrets.RABBITMQ_USER }} --from-literal=rabbitmq-pass=${{ secrets.RABBITMQ_PASS }}

    - name: Deploy 
      if: steps.check-deployment.outputs.status == '0'
      run: |
        kubectl apply -f ${{ secrets.REPO_PATH }}/docker_kubernetes/app/

    - name: Update Deployment 
      run: |
        kubectl set image deployment/post-service-deployment post-service=ghcr.io/${{ github.repository_owner }}/post-service:dev
        kubectl rollout status deployment/post-service
