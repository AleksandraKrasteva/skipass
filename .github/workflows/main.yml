name: CI 

on:
  push:
    branches:
      - main
      - ci-setup

env: 
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{github.repository}}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Change wrapper permissions
      working-directory: ./PostManagement
      run: chmod +x ./gradlew
    
    - name: build PostService
      working-directory: ./PostManagement
      run: ./gradlew test
      
    - name: Codacy Report
      uses: codacy/codacy-coverage-reporter-action@v1.3.0
      with:
          api-token: ${{ secrets.CODACY_TOKEN }}
          coverage-reports: ./PostManagement/build/reports/jacoco/test/jacocoTestReport.xml
          language: java
        

  # - name: Codacy Coverage Reporter
  # You may pin to the exact commit or the version.
  # uses: codacy/codacy-coverage-reporter-action@89d6c85cfafaec52c72b6c5e8b2878d33104c699
  # uses: codacy/codacy-coverage-reporter-action@v1.3.0
  # with:
    # API project token to retrieve your remote Codacy configuration for the project being analyzed
    # project-token: # optional
    # API account token to retrieve your remote Codacy configuration for the project being analyzed
    # api-token: # optional
    # Optional comma separated list of coverage reports to send to Codacy
    # coverage-reports: # optional, default is 
    # Optionally force associating a language with your coverage report
    # language: # optional
    # Optionally force using a specific coverage report parser
    # force-coverage-parser: # optional
          

  build:
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        include: 
        - dockerfile: ./UserService/Dockerfile
          image: ghcr.io/AleksandraKrasteva/user-service
          working-directory: ./UserService

        - dockerfile: ./JourneyService/Dockerfile
          image: ghcr.io/AleksandraKrasteva/journey-service
          working-directory: ./JourneyService

        - dockerfile: ./PostManagement/Dockerfile
          image: ghcr.io/AleksandraKrasteva/post-service
          working-directory: ./PostManagement

        - dockerfile: ./StatisticsService/Dockerfile
          image: ghcr.io/AleksandraKrasteva/statistics-service
          working-directory: ./StatisticsService

        - dockerfile: ./client/Dockerfile
          image: ghcr.io/AleksandraKrasteva/client
          working-directory: ./client  

        - dockerfile: ./Krakend/Dockerfile
          image: ghcr.io/AleksandraKrasteva/krakend_test
          working-directory: ./Krakend

        - dockerfile: ./RabbitMQ/Dockerfile
          image: ghcr.io/AleksandraKrasteva/rabbitmq
          working-directory: ./RabbitMQ
          

    permissions:
      contents: read
      packages: write
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Log in Docker GitHub Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Extract metadata for Docker 
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{matrix.image}}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push images from matrix
        uses: docker/build-push-action@v5
        with:
          context: ${{matrix.working-directory}}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
